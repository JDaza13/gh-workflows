name: Deploy Project with reusable job
on:
  push:
    branches:
      - master
      - "release/**"
  workflow_dispatch:
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4.1.7
      - name: ðŸ’¾ Cache dependencies
        id: cache
        uses: actions/cache@v4.0.2
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: ðŸ“¦ Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: ðŸ§¹ Lint
        run: npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4.1.7
      - name: ðŸ’¾ Cache dependencies
        id: cache
        uses: actions/cache@v4.0.2
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: ðŸ“¦ Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: ðŸ§ª Run tests
        id: run-tests
        run: npm run test
      - name: ðŸš¨ Upload failed tests report
        if: failure() && steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v4.4.0
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4.1.7
      - name: ðŸ’¾ Cache dependencies
        id: cache
        uses: actions/cache@v4.0.2
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: ðŸ“¦ Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Build website
        id: build-website
        run: npm run build
      - name: ðŸ“¤ Upload artifacts
        uses: actions/upload-artifact@v4.4.0
        with:
          name: dist-files
          path: dist
  deploy:
    needs: build
    uses: ./.github/workflows/reusable.yml
    with:
      artifact-name: dist-files
    secrets:
      some-secret: ðŸ¤« Shush
  print-deploy-result:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Print deploy output
        run: echo "${{ needs.deploy.outputs.result }}"
  report:
    needs: [lint, deploy]
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Output information
        run: |
          echo "Something went wrong!"
          echo "${{ toJSON(github) }}"
